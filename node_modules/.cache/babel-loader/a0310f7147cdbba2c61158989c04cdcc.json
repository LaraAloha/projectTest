{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/svetalara/projectTest/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/svetalara/projectTest/src/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\tcursor: pointer;\\n\\tfont-size: 1rem;\\n\\tmargin: 2%;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport Questionnaire from './Questionnaire';\nimport Results from './Results';\nimport './App.css';\nimport styled from 'styled-components';\nconst Button = styled.button(_templateObject());\n/**\n * @todo  В стейт можно прописать номер вопроса, на котором пользователь сидит..\n * @todo В стейт сохранять рез-ты каждого ответа для поутинки?\n */\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggleOn: true\n    };\n  }\n\n  render() {\n    React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"React Quiz\")), React.createElement(Question, {\n      content: \"What is your favourite food?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App; // if(this.state.isToggleOn) {\n// \treturn (\n// \t\t<div className=\"App\">\n// \t\t\t<Questionnaire />\n// \t\t\t<Button> \n// \t\t\t\tУзнать результат \n// \t\t\t</Button>\n// \t\t\t{/* { isToggleOn ? <Results /> : null } */}\n// \t\t\t<Results />\n// \t\t</div>\n// \t);\n// } else {\n// \treturn (\n// \t\t<div className=\"App\">\n// \t\t\t<Questionnaire />\n// \t\t\t<Button onClick={this.handleClick}> \n// \t\t\t\tУзнать результат\n// \t\t\t</Button>\n// \t\t\t</div>\n// \t);\n// }","map":{"version":3,"sources":["/Users/svetalara/projectTest/src/App.js"],"names":["React","Questionnaire","Results","styled","Button","button","App","Component","constructor","props","state","isToggleOn","render","logo"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA,MAAMC,MAAM,GAAGD,MAAM,CAACE,MAAV,mBAAZ;AAOA;;;;;AAKA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb;AACA;;AACDC,EAAAA,MAAM,GAAG;AACR;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEC,IAAV;AAAgB,MAAA,SAAS,EAAC,UAA1B;AAAqC,MAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADA,EAKA,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAC,8BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA;AAOA;;AAbgC;;AAgBlC,eAAeP,GAAf,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport Questionnaire from './Questionnaire';\nimport Results from './Results';\nimport './App.css';\nimport styled from 'styled-components';\n\n\nconst Button = styled.button`\n\tcursor: pointer;\n\tfont-size: 1rem;\n\tmargin: 2%;\n`;\n\n\n/**\n * @todo  В стейт можно прописать номер вопроса, на котором пользователь сидит..\n * @todo В стейт сохранять рез-ты каждого ответа для поутинки?\n */\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {isToggleOn: true};\t\t\n\t}\n\trender() {\n\t\t<div className=\"App\">\n\t\t<div className=\"App-header\">\n\t\t  <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t  <h2>React Quiz</h2>\n\t\t</div>\n\t\t<Question content=\"What is your favourite food?\" />\n\t  </div>\n\t}\n}\n\nexport default App;\n\n\n\n// if(this.state.isToggleOn) {\n// \treturn (\n// \t\t<div className=\"App\">\n// \t\t\t<Questionnaire />\n// \t\t\t<Button> \n// \t\t\t\tУзнать результат \n// \t\t\t</Button>\n// \t\t\t{/* { isToggleOn ? <Results /> : null } */}\n\n// \t\t\t<Results />\n// \t\t</div>\n// \t);\n// } else {\n// \treturn (\n// \t\t<div className=\"App\">\n// \t\t\t<Questionnaire />\n// \t\t\t<Button onClick={this.handleClick}> \n// \t\t\t\tУзнать результат\n// \t\t\t</Button>\n// \t\t\t</div>\n// \t);\n// }"]},"metadata":{},"sourceType":"module"}