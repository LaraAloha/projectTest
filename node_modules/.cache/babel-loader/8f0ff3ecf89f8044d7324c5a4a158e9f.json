{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/svetalara/projectTest/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/svetalara/projectTest/src/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\tcursor: pointer;\\n\\tfont-size: 1rem;\\n\\tmargin: 2%;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport Questionnaire from './Questionnaire';\nimport Results from './Results';\nimport './App.css';\nimport styled from 'styled-components';\nconst Button = styled.button(_templateObject());\n/**\n * @todo  В стейт можно прописать номер вопроса, на котором пользователь сидит..\n * @todo В стейт сохранять рез-ты каждого ответа для поутинки?\n */\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggleOn: f\n    };\n  }\n\n  render() {\n    if (this.state.isToggleOn) {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Questionnaire, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \" \\u0423\\u0437\\u043D\\u0430\\u0442\\u044C \\u0440\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442 \"), this.state.showResults ? React.createElement(Results, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }) : null, React.createElement(Results, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/svetalara/projectTest/src/App.js"],"names":["React","Questionnaire","Results","styled","Button","button","App","Component","constructor","props","state","isToggleOn","f","render","handleClick","showResults"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA,MAAMC,MAAM,GAAGD,MAAM,CAACE,MAAV,mBAAZ;AAOA;;;;;AAKA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,UAAU,EAAEC;AAAb,KAAb;AACA;;AACDC,EAAAA,MAAM,GAAG;AACR,QAAG,KAAKH,KAAL,CAAWC,UAAd,EAA0B;AACzB,aACC;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKG,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yGAFD,EAGG,KAAKJ,KAAL,CAAWK,WAAX,GAAyB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzB,GAAuC,IAH1C,EAKC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALD,CADD;AASA;AACD;;AAjBgC;;AAoBlC,eAAeT,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport Questionnaire from './Questionnaire';\nimport Results from './Results';\nimport './App.css';\nimport styled from 'styled-components';\n\n\nconst Button = styled.button`\n\tcursor: pointer;\n\tfont-size: 1rem;\n\tmargin: 2%;\n`;\n\n\n/**\n * @todo  В стейт можно прописать номер вопроса, на котором пользователь сидит..\n * @todo В стейт сохранять рез-ты каждого ответа для поутинки?\n */\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {isToggleOn: f};\t\t\n\t}\n\trender() {\n\t\tif(this.state.isToggleOn) {\n\t\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<Questionnaire />\n\t\t\t\t\t<Button onClick={this.handleClick}> Узнать результат </Button>\n\t\t\t\t\t{ this.state.showResults ? <Results /> : null }\n\n\t\t\t\t\t<Results />\n\t\t\t\t</div>\n\t\t\t);\n\t\t} \n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}