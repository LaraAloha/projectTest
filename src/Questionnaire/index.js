import ReactDOM from 'react-dom';
import React, { Component } from 'react';

/**
 * @todo  вынести в отдельную компоненту ответы
 */

class QuestionsObj extends React.Component {
	constructor(props) {
		super(props);
		this.state = {currentStage: 1};		
	}
	render() {
	const data = {
		stages: {
			1: {
				questions: {
					1: {
						question: 'Все входящие звонки и заявки в компанию принимают профессионально и затем быстро и точно направляют кому следует?',
						answers: {
							1: 'test answer'
						}
					},
					2: {
						question: 'За прошедшие 12 месяцев прибыль снизилась',
						answers: {
							1: 'test answer'
						}
					},
					3: {
						question: 'У нас есть этап воронки продаж, на котором, как правило, скапливается большое количество сделок (есть явное узкое место)',
						answers: {
							1: 'test answer'
						}
					},
					4: {
						question: 'Продающий персонал может легко перечислить основные преимущества нашего продукта / услуги и ответить на вопросы клиентов',
						answers: {
							1: 'test answer'
						}
					},
					5: {
						question: 'Опыт говорит, что сейчас нанять подходящего сотрудника практически невозможно',
						answers: {
							1: 'test answer'
						}
					},
					6: {
						question: 'Продающий персонал слабо разбирается в особенностях нашего продукта / услуги',
						answers: {
							1: 'test answer'
						}
					},
					7: {
						question: 'Опыт говорит, что сейчас нанять подходящего сотрудника практически невозможно',
						answers: {
							1: 'test answer'
						}
					},
					8: {
						question: 'У нас есть план по обучению персонала компании, выполнение которого контролируется',
						answers: {
							1: 'test answer'
						}
					},
					9: {
						question: 'У нас есть сильный руководитель отдела продаж, который пользуется авторитетом у подчиненных, планы по продажам которого регулярно выполняются',
						answers: {
							1: 'test answer'
						}
					},
					10: {
						question: 'Периодически мне самому приходится общаться с клиентами, чтобы добиться оплаты',
						answers: {
							1: 'test answer'
						}
					},
					11: {
						question: 'Каждый наш продавец ведет собственные записи, у нас нет общей базы с информацией обо всех клиентах',
						answers: {
							1: 'test answer'
						}
					},
					12: {
						question: 'У нас нет каких-то стандартных материалов, помогающих в продажах. Каждый продавец сам решает, что и как ему использовать',
						answers: {
							1: 'test answer'
						}
					},
					13: {
						question: 'У нас есть авто-цепочка прогревающих писем, которая отрпавляется всем потенциальным клиентам',
						answers: {
							1: 'test answer'
						}
					},
				}
			},

			2: {
				questions: {
					1: {
						question: 'Постоянные клиенты очень редко уходят от нас к конкурентам',
						answers: {
							1: 'test answer'
						}
					},
					2: {
						question: 'Каждый год на протяжении последних трех лет доход и прибыль растут',
						answers: {
							1: 'test answer'
						}
					},
					3: {
						question: 'Повторную покупку с тем же средним чеком у нас делает меньше 50% купивших клиентов',
						answers: {
							1: 'test answer'
						}
					},
					3: {
						question: 'Основная продукция / услуга не имеет каких-то ощутимых преимуществ перед продуктами конкурентов',
						answers: {
							1: 'test answer'
						}
					},
					3: {
						question: 'Я лично нанимаю / согласовываю всех новых сотрудников',
						answers: {
							1: 'test answer'
						}
					},
					3: {
						question: 'Новый сотрудник адаптируется как минимум три месяца, прежде чем начинает давать результат',
						answers: {
							1: 'test answer'
						}
					},
					3: {
						question: 'Если с сотрудниками компании и проводится обучение, то только по моей личной инициативе',
						answers: {
							1: 'test answer'
						}
					},
					3: {
						question: 'Мы не ведем подсчет точного количества новых потенциальных клиентов, звонков, встреч, конверсии, среднего чека и LTV по сотрудникам',
						answers: {
							1: 'test answer'
						}
					},
					3: {
						question: 'У нас есть «гора» недожатых клиентов, в том числе отказников, которых никто не проверял на «отказ» (кладбище лидов)',
						answers: {
							1: 'test answer'
						}
					},
					3: {
						question: 'У нас есть продавцы, за которыми закреплено более 100 клиентов в работе на данный момент',
						answers: {
							1: 'test answer'
						}
					},
					3: {
						question: 'Есть печатные / электронные материалы или образцы, которые используются в процессе продажи и помогают клиенту понять ценность услуг или продуктов компании',
						answers: {
							1: 'test answer'
						}
					},
					4: {
						question: 'У нас настроена digital-воронка, которая преследует клиентов в интеренете ретаргетингом в соответствии с их движением по воронке продаж',
						answers: {
							1: 'test answer'
						}
					}
				}
			},


		}
	};

	return (
		<table>
			<thead>
				<tr>
					<th>Вопросы</th>
					<th>Да</th>
					<th>Нет</th>
					<th>Возможно</th>
				</tr>
			</thead>
		<tbody> 
			{
				Object.entries(data.stages[this.state.currentStage].questions).map(([questionId, questionData]) => (
					<tr key={questionId}>
						<td>{questionData.question}</td>
						<td><input name={"radio"+questionId} type="radio"></input></td>
						<td><input name={"radio"+questionId} type="radio"></input></td>
						<td><input name={"radio"+questionId} type="radio"></input></td>
					</tr>
				))
			}
		</tbody>
		</table>
	);
	}
}

export default QuestionsObj;
